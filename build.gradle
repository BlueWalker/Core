buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.acompagno:localcheck:0.1.+'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.acompagno.localcheck'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 21
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

repositories {
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile ('com.amazonaws:aws-android-sdk-core:2.1.+') {
        transitive = false
    }
    compile ('com.amazonaws:aws-android-sdk-ddb:2.1.+') {
        transitive = false
    }
    compile (LC.checkLocal('blue.walker:BeaconLib:0.1.+', 'BeaconLib')) {
        transitive = true
    }
    compile (LC.checkLocal('blue.walker:Pathfinding:0.1.+', 'Pathfinding')) {
        transitive = true
    }
    compile (LC.checkLocal('blue.walker:Trilateration:0.1.+', 'Trilateration')) {
        transitive = true
    }
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

apply from: 'gradle/android-publish.gradle'
apply from: 'gradle/maven-publish.gradle'
apply from: 'gradle/bintray.gradle'
